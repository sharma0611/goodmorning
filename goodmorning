#!/usr/bin/env python3
import os
import subprocess
import sys
import getpass
from dateutil import parser
from shutil import copyfile
from crontab import CronTab
import re
from datetime import datetime

#Usage:
#goodmorning.py 8:00AM 
#goodmorning.py alarm1 9 PM

#CONFIG
default_alarm = "alarm1"
wakeup_uri = "spotify:track:4qKcDkK6siZ7Jp1Jb4m0aL"

#Helper functions
def make_executable(path):
    mode = os.stat(path).st_mode
    mode |= (mode & 0o444) >> 2    # copy R bits to X
    os.chmod(path, mode)

def remove_alarm(alarm_name, cron):
    for job in cron:
        if alarm_name in job.comment:
            my_cron.remove(job)
            my_cron.write()

def show_alarms(cron):
    for job in cron:
        if 'alarm' in job.comment:
            dt = datetime.now()
            dt = dt.replace(hour=int(str(job.hour)), minute=int(str(job.minute)))
            print(job.comment + ": " + dt.strftime("%H:%M"))

#MAIN
#combine all incoming arguments
wake_time = sys.argv[1:]
wake_time = " ".join(wake_time)
curr_alarm = default_alarm

#Grab user & cron jobs
user = getpass.getuser()
my_cron = CronTab(user=user)

#cases
#parse alarm
if 'alarm' in wake_time:
    try:
        result = re.findall('alarm\d+', wake_time)
        if result is not None:
            result = result[0]
        else:
            print("Alarm not found.")
    except Exception as e:
        print(e)
        print("You need to pass in an alarm identifier like this: goodmorning alarm1 8AM")
        exit(1)

    curr_alarm = result
    wake_time = wake_time.replace(result, "")
    wake_time = wake_time.strip()
    print("Alarm selected: " + str(curr_alarm))

#remove alarm
if 'remove' in wake_time:
    wake_time = wake_time.replace("remove", "")
    wake_time = wake_time.strip()
    remove_alarm(curr_alarm, my_cron)
    print("Removed alarm.")

#show all alarms
elif 'show' in wake_time:
    wake_time = wake_time.replace("show", "")
    wake_time = wake_time.strip()
    show_alarms(my_cron)

#else set alarm
else:
    wake_time_dt = parser.parse(wake_time)
    print("Alarm set for: " + str(wake_time_dt.strftime("%H:%M")))

    #setup path to wake up
    goodmorning_path = os.path.realpath(__file__)
    print(goodmorning_path)
    wakeup_path = goodmorning_path.replace("goodmorning/goodmorning", "goodmorning/wakeup")
    ctrlr_path = goodmorning_path.replace("goodmorning/goodmorning", "goodmorning/spotify_ctrl")
    try:
        make_executable(wakeup_path)
        make_executable(ctrlr_path)
    except:
        pass

    #remove any existing alarms
    remove_alarm(curr_alarm, my_cron)

    #add new alarm
    cmd = wakeup_path + " " + wakeup_uri + " " + ctrlr_path 
    job = my_cron.new(command=cmd, comment=curr_alarm)
    job.hour.on(int(wake_time_dt.strftime("%H")))
    job.minute.on(int(wake_time_dt.strftime("%M")))

    my_cron.write()
